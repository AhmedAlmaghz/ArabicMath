"use strict";const e={x:"س",y:"ص",z:"ع",w:"و",a:"أ",b:"ب",c:"ج",d:"د",e:"هـ",f:"ق",g:"غ",h:"ح",i:"ي",j:"ج",k:"ك",l:"ل",m:"م",n:"ن",o:"ع",p:"ف",q:"ق",r:"ر",s:"س",t:"ت",u:"ض",v:"خ",alpha:"ألفا",beta:"بيتا",gamma:"جاما",delta:"دلتا",epsilon:"إبسيلون",zeta:"زيتا",eta:"إيتا",theta:"ثيتا",iota:"يوتا",kappa:"كابا",lambda:"لامدا",mu:"مو",nu:"نو",xi:"كسي",omicron:"أوميكرون",pi:"باي",rho:"رو",sigma:"سيجما",tau:"تاو",upsilon:"أوبسيلون",phi:"فاي",chi:"خي",psi:"بساي",omega:"أوميغا",Alpha:"ألفا",Beta:"بيتا",Gamma:"جاما",Delta:"دلتا",Epsilon:"إبسيلون",Zeta:"زيتا",Eta:"إيتا",Theta:"ثيتا",Iota:"يوتا",Kappa:"كابا",Lambda:"لامدا",Mu:"مو",Nu:"نو",Xi:"كسي",Omicron:"أوميكرون",Pi:"باي",Rho:"رو",Sigma:"سيجما",Tau:"تاو",Upsilon:"أوبسيلون",Phi:"فاي",Chi:"خي",Psi:"بساي",Omega:"أوميغا",e:"هـ",pi:"ط",infinity:"∞",infty:"∞"},t={sin:"جا",cos:"جتا",tan:"ظا",cot:"ظتا",sec:"قا",csc:"قتا",asin:"قوس جا",acos:"قوس جتا",atan:"قوس ظا",acot:"قوس ظتا",asec:"قوس قا",acsc:"قوس قتا",sinh:"جا ز",cosh:"جتا ز",tanh:"ظا ز",coth:"ظتا ز",sech:"قا ز",csch:"قتا ز",ln:"لو",log:"لو",exp:"هـ^",lg:"لو١٠",sqrt:"جذر",cbrt:"جذر٣",pow:"أس",abs:"مطلق",max:"غا",min:"صغ",floor:"أرض",ceil:"سقف",round:"تقريب",lim:"نها",sum:"مج",prod:"جد",int:"تك",diff:"مشتق",grad:"تدرج",div:"تباعد",curl:"دوران",prob:"احتمال",mean:"متوسط",var:"تباين",std:"انحراف",real:"حقيقي",imag:"تخيلي",conj:"مرافق",arg:"وسيطة"},r={"→":"←","←":"→","⟹":"⟸","⟸":"⟹","↔":"↔","⟺":"⟺","↦":"↤","↤":"↦","⇒":"⇐","⇐":"⇒","⇔":"⇔","(":")",")":"(","[":"]","]":"[","{":"}","}":"{","⟨":"⟩","⟩":"⟨","⌊":"⌋","⌋":"⌊","⌈":"⌉","⌉":"⌈","∫":"∫","∬":"∬","∭":"∭","∮":"∮","∑":"∑","∏":"∏","√":"√","∛":"∛","∜":"∜","≤":"≤","≥":"≥","≠":"≠","≈":"≈","≡":"≡","<":"<",">":">","=":"=","±":"±","∓":"∓","∈":"∈","∉":"∉","⊂":"⊂","⊃":"⊃","∪":"∪","∩":"∩","∅":"∅","⊆":"⊆","⊇":"⊇","⊊":"⊊","⊋":"⊋","∖":"∖","∧":"∧","∨":"∨","¬":"¬","∀":"∀","∃":"∃","∄":"∄","∞":"∞","∂":"∂","∇":"∇","△":"△","□":"□","◊":"◊","⊕":"⊕","⊗":"⊗","⊙":"⊙","⊥":"⊥","∥":"∥","∦":"∦"},s=[{name:"limit",pattern:/\\?lim|نها/i},{name:"integral",pattern:/\\?int|∫|تك/i},{name:"derivative",pattern:/d\s*\/\s*dx|\\?frac\{d/i},{name:"summation",pattern:/\\?sum|∑|مج/i},{name:"product",pattern:/\\?prod|∏|جد/i},{name:"matrix",pattern:/\\?begin\{.*matrix\}|مصفوفة/i}],a={0:"٠",1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩"},n={MathSymbols:e,MathFunctions:t,MathOperations:r,CompoundPatterns:s,ArabicDigitsMap:a};!function(e,t){"object"==typeof module&&module.exports?module.exports=t():e.ArabicMathDictionaries=t()}("undefined"!=typeof self?self:this,function(){return n}),function(e,t){"object"==typeof module&&module.exports?module.exports=t(require("../dictionaries/symbols")):e.ArabicMathTranslator=t(e.ArabicMathDictionaries)}("undefined"!=typeof self?self:this,function(e){const t=function(e){try{return e&&e.default?e.default:e||{}}catch(e){return{}}}(e),r=t.MathSymbols||{},s=t.MathFunctions||{},a=t.MathOperations||{},n=t.ArabicDigitsMap||{};return class{constructor(e={}){this.options={translateNumbers:!1!==e.translateNumbers,translateFunctions:!1!==e.translateFunctions,translateVariables:!1!==e.translateVariables,flipArrows:!1!==e.flipArrows,translateLatexCommands:!0===e.translateLatexCommands,applyRTL:!0===e.applyRTL}}translate(e){if(!e||"string"!=typeof e)return"";let t=e;return this.options.translateLatexCommands&&(t=this.translateLatexCommands(t)),this.options.translateFunctions&&(t=this.translateFunctions(t)),this.options.translateVariables&&(t=this.translateSymbols(t)),this.options.translateNumbers&&(t=this.translateNumbers(t)),this.options.applyRTL&&(t=this.mirrorMathSymbols(t)),t=this.formatForRTL(t),t}_maskCommands(e){const t=[];return{masked:e.replace(/\\[A-Za-z]+/g,e=>{const r=t.length;return t.push(e),`__CMD${r}__`}),commands:t}}_unmaskCommands(e,t){return e.replace(/__CMD(\d+)__/g,(e,r)=>t[Number(r)]||e)}translateSymbols(e){const{masked:t,commands:s}=this._maskCommands(e);let a=t;const n=Object.keys(r).filter(e=>/[A-Za-z]+/.test(e)).sort((e,t)=>t.length-e.length);for(const e of n){const t=new RegExp(`\\b${this.escapeReg(e)}\\b`,"g");a=a.replace(t,r[e])}return a=a.replace(/[A-Za-z]/g,e=>r[e]||e),this._unmaskCommands(a,s)}translateFunctions(e){const{masked:t,commands:r}=this._maskCommands(e);let a=t;const n=Object.keys(s).sort((e,t)=>t.length-e.length);for(const e of n){const t=new RegExp(`\\b${this.escapeReg(e)}\\b`,"g");a=a.replace(t,s[e])}return this._unmaskCommands(a,r)}translateNumbers(e){return e.replace(/\d/g,e=>n[e]||e)}translateLatexCommands(e){let t=e;const a={"\\sqrt":"arsqrt","\\lim":"نها","\\int":"arint","\\sum":"مجـ","\\to":"←","\\infty":"∞","\\cdot":"·","\\times":"×","\\div":"÷"};for(const[e,r]of Object.entries(a))t=t.replace(new RegExp(this.escapeReg(e),"g"),r);const n=new Set(["left","right","begin","end","pmatrix","bmatrix","matrix","text","displaystyle","limits","nonumber","qquad","quad"]);return t=t.replace(/\\([A-Za-z]+)/g,(e,t)=>n.has(t)?e:s[t]?s[t]:r[t]?r[t]:e),t}flipArrows(e){const t=Object.keys(a).filter(e=>["→","←","⟹","⟸","↔","⟺"].includes(e));for(const r of t){const t=new RegExp(this.escapeReg(r),"g");e=e.replace(t,a[r])}return e}mirrorMathSymbols(e){let t=e;t=t.replace(/كسر\{([^}]+)\}\{([^}]+)\}/g,"$2/$1"),t=t.replace(/\\frac\{([^}]+)\}\{([^}]+)\}/g,"$2/$1"),t=t.replace(/نها_\{([^}]+)\}\^\{([^}]+)\}/g,"نها^{$2}_{$1}"),t=t.replace(/\\lim_\{([^}]+)\}\^\{([^}]+)\}/g,"نها^{$2}_{$1}"),t=t.replace(/arint_\{([^}]+)\}\^\{([^}]+)\}/g,"arint^{$2}_{$1}"),t=t.replace(/\\int_\{([^}]+)\}\^\{([^}]+)\}/g,"arint^{$2}_{$1}"),t=t.replace(/مجـ_\{([^}]+)\}\^\{([^}]+)\}/g,"مج^{$2}_{$1}"),t=t.replace(/\\sum_\{([^}]+)\}\^\{([^}]+)\}/g,"مج^{$2}_{$1}");const r={"(":")",")":"(","[":"]","]":"[","{":"}","}":"{"};for(const[e,s]of Object.entries(r))t=t.replace(new RegExp(this.escapeReg(e),"g"),s);const s={"→":"←","←":"→","⟹":"⟸","⟸":"⟹","↦":"↤","↤":"↦"};for(const[e,r]of Object.entries(s))t=t.replace(new RegExp(this.escapeReg(e),"g"),r);return t=t.replace(/\\rightarrow/g,"←"),t=t.replace(/\\leftarrow/g,"→"),t=t.replace(/\\Rightarrow/g,"⟸"),t=t.replace(/\\Leftarrow/g,"⟹"),t}formatForRTL(e){let t=e;return t=t.replace(/\s+/g," ").trim(),t=t.replace(/([\u0600-\u06FF])\s*([+\-=])\s*([\u0600-\u06FF])/g,"$1 $2 $3"),t=t.replace(/([\u0600-\u06FF])\s*([a-zA-Z])/g,"$1 $2"),t=t.replace(/([a-zA-Z])\s*([\u0600-\u06FF])/g,"$1 $2"),t}escapeReg(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}}});class o{constructor(){this.tokenTypes={FUNCTION:"function",VARIABLE:"variable",NUMBER:"number",OPERATOR:"operator",SYMBOL:"symbol",BRACKET:"bracket",LATEX_COMMAND:"latex_command"}}parse(e){const t=this.preprocess(e),r=this.tokenize(t);return this.buildAST(r)}preprocess(e){return e.replace(/\s+/g," ").replace(/\\,/g," ").replace(/\\!/g,"").trim()}tokenize(e){const t=[],r=[{type:this.tokenTypes.LATEX_COMMAND,regex:/\\[a-zA-Z]+\*?/g},{type:this.tokenTypes.FUNCTION,regex:/\b(sin|cos|tan|log|ln|exp|sqrt|lim|sum|prod|int)\b/g},{type:this.tokenTypes.NUMBER,regex:/\d+\.?\d*/g},{type:this.tokenTypes.VARIABLE,regex:/\b[a-zA-Z]\b/g},{type:this.tokenTypes.OPERATOR,regex:/[+\-*/=<>≤≥≠≈]/g},{type:this.tokenTypes.SYMBOL,regex:/[∫∑∏√∞π∂∇]/g},{type:this.tokenTypes.BRACKET,regex:/[(){}\[\]]/g}];let s=0;for(;s<e.length;){let a=!1;for(const n of r){n.regex.lastIndex=s;const r=n.regex.exec(e);if(r&&r.index===s){t.push({type:n.type,value:r[0],position:s}),s=r.index+r[0].length,a=!0;break}}a||s++}return t}buildAST(e){return{type:"expression",tokens:e,structure:this.analyzeStructure(e)}}analyzeStructure(e){const t={functions:[],variables:[],operators:[],commands:[]};return e.forEach(e=>{switch(e.type){case this.tokenTypes.FUNCTION:t.functions.push(e);break;case this.tokenTypes.VARIABLE:t.variables.push(e);break;case this.tokenTypes.OPERATOR:t.operators.push(e);break;case this.tokenTypes.LATEX_COMMAND:t.commands.push(e)}}),t}}!function(e){try{"object"==typeof module&&module.exports?module.exports=o:void 0!==e&&(e.ArabicMathParser=e.ArabicMathParser||o)}catch(e){}}("undefined"!=typeof self?self:this),function(e,t){"object"==typeof module&&module.exports?module.exports=t():e.ArabicMathRenderer=t()}("undefined"!=typeof self?self:this,function(){return class{constructor(e={}){this.options=Object.assign({},e)}render(e,t){const r=t&&t.targetElement;if(!r)throw new Error("Renderer: targetElement is required");for(;r.firstChild;)r.removeChild(r.firstChild);const s=t.options&&t.options.mathRenderer||"none",a=t&&"string"==typeof t.equation?t.equation:this._textFromAST(e);if("mathjax"===s){const e=/^\s*\\\(|\\\[|\$/.test(a)?a:`\\(${a}\\)`,t=document.createElement("span");if(t.textContent=e,r.appendChild(t),"undefined"!=typeof MathJax&&MathJax.typesetPromise)try{return MathJax.typesetPromise([r]).then(()=>r)}catch(e){}}else if("katex"===s)if("undefined"!=typeof katex&&katex.render)try{katex.render(a,r,{throwOnError:!1,trust:!1})}catch(e){r.textContent=a}else r.textContent=a;else{const e=document.createElement("span");e.className="arabic-math-text",e.textContent=a,r.appendChild(e)}return t.options&&t.options.rtl&&(r.style.direction="rtl",r.style.textAlign="right"),r}_textFromAST(e){try{if(e&&Array.isArray(e.tokens))return e.tokens.map(e=>e&&null!=e.value?String(e.value):"").join(" ").trim()}catch(e){}return""}}});var i="undefined"!=typeof window&&window.RTLHandler||class{constructor(){this.rtlPatterns={arrows:[{from:"→",to:"←"},{from:"←",to:"→"},{from:"⟹",to:"⟸"},{from:"⟸",to:"⟹"},{from:"↦",to:"↤"},{from:"↤",to:"↦"}],brackets:[{from:"(",to:")"},{from:")",to:"("},{from:"[",to:"]"},{from:"]",to:"["},{from:"{",to:"}"},{from:"}",to:"{"}]}}processRTL(e,t={}){let r=e;return!1!==t.flipArrows&&(r=this.flipArrows(r)),!1!==t.swapBounds&&(r=this.swapIntegralBounds(r),r=this.swapSumBounds(r)),!1!==t.handleFractions&&(r=this.processFractions(r)),!1!==t.handleMatrices&&(r=this.processMatrices(r)),r}flipArrows(e){let t=e;return this.rtlPatterns.arrows.forEach(e=>{t=t.replace(new RegExp(e.from,"g"),e.to)}),t}swapIntegralBounds(e){return e.replace(/\\int_\{([^}]+)\}\^\{([^}]+)\}/g,"\\int^{$2}_{$1}").replace(/∫_\{([^}]+)\}\^\{([^}]+)\}/g,"∫^{$2}_{$1}")}swapSumBounds(e){return e.replace(/\\sum_\{([^}]+)\}\^\{([^}]+)\}/g,"\\sum^{$2}_{$1}").replace(/∑_\{([^}]+)\}\^\{([^}]+)\}/g,"∑^{$2}_{$1}")}processFractions(e){return e}processMatrices(e){return e.replace(/\\begin\{(pmatrix|bmatrix|vmatrix)\}([\s\S]*?)\\end\{\1\}/g,(e,t,r)=>`\\begin{${t}}${r.trim().split("\\\\").map(e=>e.split("&").reverse().join("&")).join("\\\\")}\\end{${t}}`)}postProcessElement(e){e.style.direction="rtl",e.style.textAlign="right";e.querySelectorAll(".MathJax, .katex").forEach(e=>{e.style.direction="ltr",e.parentElement.style.direction="rtl"})}};try{"object"==typeof module&&module.exports?module.exports={ensureRTL:(e,t)=>(new i).processRTL(e,t)}:"undefined"!=typeof self&&(self.ArabicMathRTL=self.ArabicMathRTL||{ensureRTL:(e,t)=>(new i).processRTL(e,t)},self.RTLHandler||(self.RTLHandler=i))}catch(e){}class c{static reverseText(e){return e.split("").reverse().join("")}static addDirectionalMarks(e){return e.replace(/[\u0600-\u06FF\u0750-\u077F]+/g,"‮$&‬")}static sanitizeText(e){return e.replace(/[\u200B-\u200D\uFEFF]/g,"").replace(/\u202A|\u202B|\u202C|\u202D|\u202E/g,"").normalize("NFC")}static splitKeepSeparator(e,t){const r=[];let s,a=0;for(;null!==(s=t.exec(e));)s.index>a&&r.push(e.substring(a,s.index)),r.push(s[0]),a=t.lastIndex;return a<e.length&&r.push(e.substring(a)),r.filter(e=>e.length>0)}static smartReplace(e,t,r){return"function"==typeof r?e.replace(t,(...e)=>r(...e)):e.replace(t,r)}static getContext(e,t,r=10){const s=Math.max(0,t-r),a=Math.min(e.length,t+r);return{before:e.substring(s,t),at:e.charAt(t),after:e.substring(t+1,a),full:e.substring(s,a),position:t,relativePosition:t-s}}static removeDuplicates(e,t=" "){const r=e.split(t),s=[],a=new Set;return r.forEach(e=>{a.has(e)||(s.push(e),a.add(e))}),s.join(t)}static toSlug(e){return e.toString().toLowerCase().trim().replace(/[\u0600-\u06FF]/g,e=>({"أ":"a","إ":"i","آ":"aa","ا":"a","ب":"b","ت":"t","ث":"th","ج":"j","ح":"h","خ":"kh","د":"d","ذ":"dh","ر":"r","ز":"z","س":"s","ش":"sh","ص":"s","ض":"d","ط":"t","ظ":"dh","ع":"a","غ":"gh","ف":"f","ق":"q","ك":"k","ل":"l","م":"m","ن":"n","ه":"h","و":"w","ي":"y","ة":"h","ى":"a","ء":"a"}[e]||e)).replace(/[^\w\s-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-+|-+$/g,"")}}class l{static detectExpressionType(e){const t={limit:/\\?lim|نها/i,integral:/\\?int|∫|تك/i,derivative:/\\?frac\{d|d\/d|مشتقة/i,summation:/\\?sum|∑|مج/i,product:/\\?prod|∏|جد/i,matrix:/\\?begin\{.*matrix\}|مصفوفة/i,equation:/=/,inequality:/[<>≤≥≠]/,function:/\\?[a-z]+\s*\(|\b(sin|cos|tan|log|ln)\s*\(/i};for(const[r,s]of Object.entries(t))if(s.test(e))return r;return"expression"}static extractVariables(e){const t=e.replace(/\\[a-zA-Z]+/g,"").replace(/\b(sin|cos|tan|log|ln|exp)\b/g,"").replace(/\d+/g,"").replace(/[^\w\u0600-\u06FF]/g," "),r=new Set,s=t.match(/\b[a-zA-Z\u0600-\u06FF]\b/g);return s&&s.forEach(e=>{1===e.length&&r.add(e)}),Array.from(r).sort()}static checkBracketBalance(e){const t={"(":")","[":"]","{":"}","\\{":"\\}","\\[":"\\]","\\(":"\\)"},r=[],s=[];let a=0;for(;a<e.length;){const n=e[a],o=e.substr(a,2);if(t[o])r.push(o),a+=2;else{if(t[n])r.push(n);else if(Object.values(t).includes(n)){const e=r.pop();e&&t[e]===n||s.push({type:"mismatch",position:a,expected:e?t[e]:"opening bracket",found:n})}a++}}return r.length>0&&r.forEach(e=>{s.push({type:"unclosed",bracket:e,expected:t[e]})}),{balanced:0===s.length,errors:s}}static convertNumbersToArabic(e){const t={0:"٠",1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩"};return e.replace(/[0-9]/g,e=>t[e]||e)}static convertNumbersToEnglish(e){const t={"٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9"};return e.replace(/[٠-٩]/g,e=>t[e]||e)}static cleanEquation(e){return e.replace(/\s+/g," ").replace(/\{\s+/g,"{").replace(/\s+\}/g,"}").replace(/\(\s+/g,"(").replace(/\s+\)/g,")").replace(/\\,/g," ").replace(/\\!/g,"").trim()}static detectLanguage(e){return/[\u0600-\u06FF]/.test(e)||/\b(جا|جتا|ظا|نها|مج|لو)\b/.test(e)?"arabic":/\b(sin|cos|tan|lim|sum|log)\b/.test(e)?"english":"mixed"}static analyzeLaTeXStructure(e){const t={commands:[],environments:[],brackets:{curly:0,square:0,round:0},complexity:0},r=e.match(/\\[a-zA-Z]+/g);r&&(t.commands=[...new Set(r)],t.complexity+=r.length);const s=e.match(/\\begin\{([^}]+)\}/g);return s&&(t.environments=s.map(e=>e.match(/\\begin\{([^}]+)\}/)[1]),t.complexity+=2*s.length),t.brackets.curly=(e.match(/\{/g)||[]).length,t.brackets.square=(e.match(/\[/g)||[]).length,t.brackets.round=(e.match(/\(/g)||[]).length,t}}class p{constructor(){this.loadedFonts=new Set,this.fontPromises=new Map}async loadFont(e,t){if(this.loadedFonts.has(e))return Promise.resolve();if(this.fontPromises.has(e))return this.fontPromises.get(e);const r=this._loadFontFile(e,t);this.fontPromises.set(e,r);try{await r,this.loadedFonts.add(e),console.log(`✅ تم تحميل الخط: ${e}`)}catch(t){throw console.error(`❌ فشل تحميل الخط ${e}:`,t),this.fontPromises.delete(e),t}return r}async _loadFontFile(e,t){if("FontFace"in window){const r=new FontFace(e,`url(${t})`);return await r.load(),void document.fonts.add(r)}return this._loadFontWithCSS(e,t)}_loadFontWithCSS(e,t){return new Promise((r,s)=>{const a=document.createElement("link");a.rel="stylesheet",a.href=t,a.onload=()=>r(),a.onerror=()=>s(new Error(`فشل في تحميل ${t}`)),document.head.appendChild(a),setTimeout(()=>{s(new Error(`انتهت مهلة تحميل الخط ${e}`))},1e4)})}async loadDefaultFonts(){const e=[{name:"Amiri",url:"https://fonts.googleapis.com/css2?family=Amiri:ital,wght@0,400;0,700;1,400;1,700&display=swap"},{name:"Cairo",url:"https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;600;700;900&display=swap"},{name:"Scheherazade New",url:"https://fonts.googleapis.com/css2?family=Scheherazade+New:wght@400;700&display=swap"}].map(e=>this.loadFont(e.name,e.url).catch(t=>{console.warn(`تحذير: لم يتم تحميل الخط ${e.name}`,t)}));await Promise.allSettled(e)}isFontAvailable(e){return this.loadedFonts.has(e)||this._checkSystemFont(e)}_checkSystemFont(e){const t="mmmmmmmmmllli",r="72px",s=document.createElement("canvas").getContext("2d");s.font=`${r} monospace`;const a=s.measureText(t).width;s.font=`${r} ${e}, monospace`;return s.measureText(t).width!==a}}window.ArabicMathFontLoader=new p,function(e,t){"object"==typeof module&&module.exports?module.exports=t(require("./core/translator"),require("./core/parser"),require("./core/renderer"),require("./utils/rtl-handler"),require("./dictionaries/symbols")):e.ArabicMath=t(e.ArabicMathTranslator,e.ArabicMathParser,e.ArabicMathRenderer,e.ArabicMathRTL,e.ArabicMathDictionaries)}("undefined"!=typeof self?self:this,function(e,t,r,s,a){const n="0.1.0";return class{constructor(s={}){this.options=Object.assign({rtl:!0,autoTranslate:!0,mathRenderer:"none",defaultTarget:null,preTranslate:{mathjax:!1,katex:!1,applyRTL:!1}},s),this.translator=new e(s.translate||{}),this.parser=new t(s.parser||{}),this.renderer=new r(s.renderer||{}),this._listeners=new Map}setOptions(e={}){this.options=Object.assign({},this.options,e),this.emit("options:change",this.options)}translate(e){const t=String(e||""),r=this.translator.translate(t);return this.options.rtl?s.ensureRTL(r):r}validateEquation(e){return this.parser.validate(e)}render(e,t,r={}){const a=Object.assign({},this.options,r),o=this._resolveTarget(e||this.options.defaultTarget);if(!o)throw new Error("Target element not found");let i=String(t||"");const c=a.mathRenderer||"none",l=a.preTranslate||{};if(a.autoTranslate)if("none"===c){const e=this.translator.translate(i);i=a.rtl?s.ensureRTL(e):e}else if("mathjax"===c&&l.mathjax||"katex"===c&&l.katex){let e=this.translator.translateNumbers(i);a.rtl&&l.applyRTL&&(e=s.ensureRTL(e)),i=e}const p=this.parser.parse(i),u={targetElement:o,options:a,version:n,equation:i};this.emit("before:render",{equation:i,context:u});const h=this.renderer.render(p,u);return h&&"function"==typeof h.then?h.then(e=>(this.emit("after:render",{equation:i,context:u}),e||o)):(this.emit("after:render",{equation:i,context:u}),o)}on(e,t){return this._listeners.has(e)||this._listeners.set(e,new Set),this._listeners.get(e).add(t),()=>this.off(e,t)}off(e,t){this._listeners.has(e)&&this._listeners.get(e).delete(t)}emit(e,t){this._listeners.has(e)&&this._listeners.get(e).forEach(e=>{try{e(t)}catch(e){}})}_resolveTarget(e){return e?"string"==typeof e?document.querySelector(e):e&&1===e.nodeType?e:null:null}static get version(){return n}get version(){return n}static get dictionaries(){return a}}});